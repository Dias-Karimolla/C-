#include <iostream>
using namespace std;

// Функция для определения, является ли число простым
bool isPrime(int num) {
	
    if (num <= 1) {
        return false;
    }
    for (int i = 2; i * i <= num; i++) {
        if (num % i == 0) {
            return false;
        }
    }
    return true;
}

// Функция для удаления простых чисел из массива
int* removePrimes(int* arr, int& size) {
    int newSize = 0; // Новый размер массива без простых чисел

    // Подсчитываем количество элементов, которые не являются простыми
    for (int i = 0; i < size; i++) {
        if (!isPrime(arr[i])) {
            newSize++;
        }
    }

    // Создаем новый динамический массив
    int* result = new int[newSize];
    int newIndex = 0;

    // Копируем элементы, которые не являются простыми, в новый массив
    for (int i = 0; i < size; i++) {
        if (!isPrime(arr[i])) {
            result[newIndex++] = arr[i];
        }
    }

    // Обновляем размер исходного массива
    size = newSize;

    return result;
}

int main() {
	setlocale(0,"Russian");
    int size;

    
    cout << "Введите размер массива: ";
    cin >> size;

    // Создание динамического массива и заполнение его элементами
    int* arr = new int[size];
    cout << "Введите элементы массива: ";
    for (int i = 0; i < size; i++) {
        cin >> arr[i];
    }

    // Вызов функции для удаления простых чисел
    int* result = removePrimes(arr, size);

    // Вывод результата
    cout << "Массив без простых чисел: ";
    for (int i = 0; i < size; i++) {
        cout << result[i] << " ";
    }
    cout <<endl;

    // Освобождение памяти
    delete[] arr;
    delete[] result;

    return 0;
}
